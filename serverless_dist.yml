service: serverless-images
custom:
  apigwBinary:
    types:
      - '*/*'
provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  timeout: 5 # optional, in seconds, default is 6
  role: ImageRenderingRole
environment:
  BUCKET: AWS_BUCKET_NAME
plugins:
  - serverless-apigw-binary
  - serverless-apigwy-binary
functions:
  fetchImage:
   handler: handler.fetchImage
   events:
     - http:
       path: fetch-image
       method: get
       contentHandling: CONVERT_TO_BINARY
  resizeImage:
   handler: handler.resizeImage
   events:
     - http:
       path: resize-image
       method: get
       contentHandling: CONVERT_TO_BINARY
resources:
  Resources:
    ImageRenderingRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-S3-ACCESS
        AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${self:service}-s3-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:ListObjects"
                  - "s3:PutObject"
                Resource:
                  - 'arn:aws:s3:::${self:provider.environment.BUCKET}/*'
